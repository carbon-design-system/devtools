/* stylelint-disable no-invalid-position-at-import-rule */

$feature-flags: (
  enable-css-custom-properties: true,
);

@import '@carbon/grid/scss/prefix';
@import '@carbon/layout/scss/breakpoint';
@import '@carbon/layout/scss/spacing';
@import '@carbon/themes/scss/themes';
@import '@carbon/type/scss/font-family';
@import '@carbon/type/scss/styles';
@import '@carbon/type/scss/font-face/sans';
@import '@carbon/grid/scss/mixins';

:root {
  @include carbon--theme(
    $theme: $carbon--theme--g90,
    $emit-custom-properties: true
  );
}

@include carbon--font-face-sans;

@import 'carbon-components/scss/components/overflow-menu/overflow-menu';
@import '~carbon-components/scss/components/toggle/toggle';
@import '~carbon-components/scss/components/accordion/accordion';
@import '~carbon-components/scss/components/skeleton/skeleton';
@import '~carbon-components/scss/components/link/link';
@import '~carbon-components/scss/components/checkbox/checkbox';
@import '~carbon-components/scss/components/number-input/number-input';
@import '~carbon-components/scss/components/form/form';
@import '~carbon-components/scss/components/tooltip/tooltip';
@import '~carbon-components/scss/components/tag/tag';
@import '~carbon-components/scss/components/tile/tile';
@import '~carbon-components/scss/components/content-switcher/content-switcher';
@import '~carbon-components/scss/components/button/button';

@import 'components/MoreOptions';
@import 'components/Loading';
@import 'components/Empty';
@import 'components/Main';
@import 'components/Inventory';
@import 'components/Grid';
@import 'components/Specs';
@import 'components/ResizeBrowser';

@include more-options;
@include loading;
@include empty;
@include main;
@include inventory;
@include grid;
@include specs;
@include resize-browser;

body {
  background: $ui-background;
  color: $text-01;
}

.#{$prefix}--popup {
  overflow: hidden;
  width: map-get(map-get($carbon--grid-breakpoints, 'sm'), 'width');
  padding-top: carbon--mini-units(5);

  &__header {
    position: fixed;
    z-index: 100;
    top: 0;
    display: flex;
    width: 100%;
    background-color: $ui-01;
    box-shadow: inset 0 1px 0 0 $ui-background;
  }

  &__heading {
    @include carbon--type-style('productive-heading-01');

    display: flex;
    height: 100%;
    align-items: center;
  }

  &--experimental {
    padding-top: carbon--mini-units(6) + carbon--rem(5px);
  }

  &__experimental-tag {
    width: 80px;
    min-height: initial;
    padding: 0;
    font-size: 10px;
  }

  &__panel {
    $panel-transition: $duration--moderate-02
      carbon--motion(standard, productive);

    width: 50%;
    transition: opacity $panel-transition;

    &:first-child {
      opacity: 1;
    }

    &:last-child {
      opacity: 0;
    }

    &-container {
      position: relative;
      display: flex;
      width: 200%;
      margin-left: 0;
      transition: margin-left $panel-transition;
    }

    &--shift {
      margin-left: -100%;

      .#{$prefix}--popup__panel:first-child {
        opacity: 0;
      }

      .#{$prefix}--popup__panel:last-child {
        opacity: 1;
      }
    }
  }

  &--white {
    @include carbon--theme(
      $theme: $carbon--theme--white,
      $emit-custom-properties: true
    );
  }

  &--g10 {
    @include carbon--theme(
      $theme: $carbon--theme--g10,
      $emit-custom-properties: true
    );
  }

  &--g100 {
    @include carbon--theme(
      $theme: $carbon--theme--g100,
      $emit-custom-properties: true
    );
  }

  &--v9 {
    @include carbon--theme(
      $theme: $carbon--theme--v9,
      $emit-custom-properties: true
    );
  }
}

.#{$prefix}--grid {
  @include carbon--make-container;
}

.#{$prefix}--row {
  @include carbon--make-row;
}

[class*='#{$prefix}--col'] {
  @include carbon--make-col-ready;
}

.#{$prefix}--col-sm-1 {
  @include carbon--make-col(1, 4);
}

.#{$prefix}--col-sm-2 {
  @include carbon--make-col(2, 4);
}

// allows nesting accordions
.#{$prefix}--accordion {
  &__item--active {
    .#{$prefix}--accordion__content {
      // all content
      display: none;
    }

    .#{$prefix}--accordion__arrow {
      // all arrows
      transform: rotate(90deg);
    }

    > .#{$prefix}--accordion__content {
      // only show direct content
      display: block;
    }

    > button .#{$prefix}--accordion__arrow {
      // only rotate arrow if direct child
      transform: rotate(-90deg);
    }
  }
}
